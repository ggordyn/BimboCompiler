%{
#include <stdio.h>
#include <stdlib.h>
%}

%define parse.lac full
%define parse.error verbose

%token ID NUM DW LT GT EQ NE OR AND ASSIGN IF NEWLINE ENDIF TEXT
%start START

%union{
  int intVal;
  char* strVal;
  char charVal;
  char* dataType;

}
%%
START: BIMBO { STATEMENTS };

STATEMENTS: STATEMENTS STATEMENT | STATEMENT;

STATEMENT: INSTRUCTION NEWLINE | CONTROL NEWLINE;

INSTRUCTION: DECLARATION | ASSIGNMENT; 

ASSIGNMENT: VARIABLE IS EXPRESSION;

DECLARATION: CREATE DATATYPE VARIABLE | CREATE DATATYPE VARIABLE IS EXPRESSION;

CONTROL: IF | DW; 

IF: IF COMPARISON THEN DO STATEMENTS ENDIF;

DW: REPEAT NEWLINE STATEMENTS UNTIL COMPARISON;

COMPARISON: EXPRESSION OPERATOR EXPRESSION 
            | COMPARISON OPERATOR EXPRESSION 
            | EXPRESSION OPERATOR COMPARISON 
            | COMPARISON OPERATOR COMPARISON;

OPERATOR: LT | GT | EQ | NE | AND | OR;

EXPRESSION: EXPRESSION + TERM | EXPRESSION - TERM | TERM | TEXT;

TERM: TERM * FACTOR | TERM / FACTOR | TERM % FACTOR | FACTOR;

FACTOR: VARIABLE | CONSTANT;

CONSTANT: NUM CONSTANT;

DATATYPE:
%%

int yywrap()
{
        return 1;
} 

main() {
    yyparse();
} 
